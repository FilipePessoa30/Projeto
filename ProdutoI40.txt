|ARGS| = 2
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
checkRKexpr(optimal=' v0 v1 * v2 v3 * v4 v5 * + +')
checkRKexpr countElems = 11 stackLen = 30
i=1 target = 'v0'
StackInfo firstFix=3000
i=2 target = 'v0 v1'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=3 target = 'v0 v1 *'
StackInfo firstFix=3000
i=4 target = 'v0 v1 * v2'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=5 target = 'v0 v1 * v2 v3'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=6 target = 'v0 v1 * v2 v3 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=7 target = 'v0 v1 * v2 v3 * v4'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=8 target = 'v0 v1 * v2 v3 * v4 v5'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=27
i=9 target = 'v0 v1 * v2 v3 * v4 v5 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=10 target = 'v0 v1 * v2 v3 * v4 v5 * +'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=11 target = 'v0 v1 * v2 v3 * v4 v5 * + +'
StackInfo firstFix=3000
CHECK out = 11
run_brkga:
best=inf
BEST SOLUTION! cost=35.475 stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
restart = 0 	 best= 35.475000	stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=31.275 stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 3 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 4 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 5 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 6 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9303 stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 0 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 1 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 2 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 3 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 4 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 5 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 6 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 7 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 8 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 9 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 10 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=5.90166 stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
printSolution2: ((v2 * v3) + (1 * (((v1) * (v0)) + (((v5 * v4) * \sqrt{(({(1 * 1)^2}/1))}) * \sqrt{({1^2})}))))
Tempo de execucao: 257.686 segundos
FIM
|ARGS| = 2
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
checkRKexpr(optimal=' v0 v1 * v2 v3 * v4 v5 * + +')
checkRKexpr countElems = 11 stackLen = 30
i=1 target = 'v0'
StackInfo firstFix=3000
i=2 target = 'v0 v1'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=3 target = 'v0 v1 *'
StackInfo firstFix=3000
i=4 target = 'v0 v1 * v2'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=5 target = 'v0 v1 * v2 v3'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=6 target = 'v0 v1 * v2 v3 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=7 target = 'v0 v1 * v2 v3 * v4'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=8 target = 'v0 v1 * v2 v3 * v4 v5'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=27
i=9 target = 'v0 v1 * v2 v3 * v4 v5 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=10 target = 'v0 v1 * v2 v3 * v4 v5 * +'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=11 target = 'v0 v1 * v2 v3 * v4 v5 * + +'
StackInfo firstFix=3000
CHECK out = 11
run_brkga:
best=inf
BEST SOLUTION! cost=35.475 stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
restart = 0 	 best= 35.475000	stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=31.275 stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 3 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 4 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 5 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 6 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9303 stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 0 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 1 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 2 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 3 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 4 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 5 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 6 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 7 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 8 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 9 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 10 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=5.90166 stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
printSolution2: ((v2 * v3) + (1 * (((v1) * (v0)) + (((v5 * v4) * \sqrt{(({(1 * 1)^2}/1))}) * \sqrt{({1^2})}))))
Tempo de execucao: 258.405 segundos
FIM
|ARGS| = 2
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
checkRKexpr(optimal=' v0 v1 * v2 v3 * v4 v5 * + +')
checkRKexpr countElems = 11 stackLen = 30
i=1 target = 'v0'
StackInfo firstFix=3000
i=2 target = 'v0 v1'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=3 target = 'v0 v1 *'
StackInfo firstFix=3000
i=4 target = 'v0 v1 * v2'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=5 target = 'v0 v1 * v2 v3'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=6 target = 'v0 v1 * v2 v3 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=7 target = 'v0 v1 * v2 v3 * v4'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=8 target = 'v0 v1 * v2 v3 * v4 v5'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=27
i=9 target = 'v0 v1 * v2 v3 * v4 v5 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=10 target = 'v0 v1 * v2 v3 * v4 v5 * +'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=11 target = 'v0 v1 * v2 v3 * v4 v5 * + +'
StackInfo firstFix=3000
CHECK out = 11
run_brkga:
best=inf
BEST SOLUTION! cost=35.475 stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
restart = 0 	 best= 35.475000	stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=31.275 stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 3 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 4 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 5 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 6 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9303 stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 0 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 1 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 2 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 3 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 4 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 5 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 6 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 7 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 8 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 9 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 10 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=5.90166 stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
printSolution2: ((v2 * v3) + (1 * (((v1) * (v0)) + (((v5 * v4) * \sqrt{(({(1 * 1)^2}/1))}) * \sqrt{({1^2})}))))
Tempo de execucao: 260.279 segundos
FIM
|ARGS| = 2
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
checkRKexpr(optimal=' v0 v1 * v2 v3 * v4 v5 * + +')
checkRKexpr countElems = 11 stackLen = 30
i=1 target = 'v0'
StackInfo firstFix=3000
i=2 target = 'v0 v1'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=3 target = 'v0 v1 *'
StackInfo firstFix=3000
i=4 target = 'v0 v1 * v2'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=5 target = 'v0 v1 * v2 v3'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=6 target = 'v0 v1 * v2 v3 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=7 target = 'v0 v1 * v2 v3 * v4'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=8 target = 'v0 v1 * v2 v3 * v4 v5'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=27
i=9 target = 'v0 v1 * v2 v3 * v4 v5 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=10 target = 'v0 v1 * v2 v3 * v4 v5 * +'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=11 target = 'v0 v1 * v2 v3 * v4 v5 * + +'
StackInfo firstFix=3000
CHECK out = 11
run_brkga:
best=inf
BEST SOLUTION! cost=35.475 stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
restart = 0 	 best= 35.475000	stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=31.275 stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 3 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 4 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 5 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 6 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9303 stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 0 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 1 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 2 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 3 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 4 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 5 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 6 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 7 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 8 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 9 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 10 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=5.90166 stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
printSolution2: ((v2 * v3) + (1 * (((v1) * (v0)) + (((v5 * v4) * \sqrt{(({(1 * 1)^2}/1))}) * \sqrt{({1^2})}))))
Tempo de execucao: 260.417 segundos
FIM
|ARGS| = 2
individualLen:97
Leitura feita com sucesso 
1) READING PROBLEM
TYPE: 'HAS_UNITS'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
var unit: 'm'
out unit: 'm^2'
has_solution='HAS_SOLUTION' => ' v0 v1 * v2 v3 * v4 v5 * + +'
SOLUTION IS: ' v0 v1 * v2 v3 * v4 v5 * + +'2) READING PROBLEM TESTS
3) READING PROBLEM CONSTANTS
const unit: '*'
3.5) SETUP UNITS
UNITS: m ; 
4) FINISHED READING PROBLEM
6 40 1
9.00	-2.00	-8.00	-4.00	3.00	-9.00	-13.00
9.00	-2.00	7.00	3.00	1.00	-10.00	-7.00
5.00	1.00	-4.00	7.00	-8.00	1.00	-31.00
-2.00	9.00	3.00	4.00	9.00	5.00	39.00
-5.00	-6.00	5.00	-8.00	7.00	-7.00	-59.00
1.00	1.00	4.00	7.00	9.00	4.00	65.00
-8.00	9.00	-4.00	2.00	2.00	-7.00	-94.00
4.00	10.00	-5.00	9.00	-1.00	-4.00	-1.00
-10.00	5.00	-9.00	6.00	-4.00	9.00	-140.00
-10.00	-4.00	4.00	0.00	2.00	-4.00	32.00
-1.00	5.00	9.00	6.00	8.00	8.00	113.00
5.00	-9.00	-4.00	0.00	3.00	10.00	-15.00
5.00	6.00	8.00	2.00	7.00	-1.00	39.00
8.00	2.00	-10.00	0.00	-5.00	3.00	1.00
6.00	3.00	10.00	-9.00	4.00	9.00	-36.00
-1.00	-9.00	1.00	-7.00	-5.00	6.00	-28.00
1.00	4.00	-2.00	-8.00	3.00	9.00	47.00
-2.00	-9.00	-10.00	5.00	-2.00	-6.00	-20.00
9.00	-4.00	-3.00	-7.00	-3.00	3.00	-24.00
10.00	-9.00	-5.00	-3.00	-9.00	-2.00	-57.00
10.00	-9.00	7.00	8.00	-4.00	-10.00	6.00
-1.00	10.00	-3.00	3.00	-5.00	10.00	-69.00
9.00	8.00	-3.00	6.00	-3.00	2.00	48.00
-9.00	-2.00	-4.00	5.00	2.00	10.00	18.00
1.00	-6.00	10.00	6.00	-2.00	-7.00	68.00
-7.00	0.00	9.00	3.00	-2.00	-4.00	35.00
-4.00	2.00	-2.00	-3.00	5.00	-1.00	-7.00
5.00	-6.00	8.00	0.00	6.00	0.00	-30.00
-6.00	-8.00	7.00	-10.00	-5.00	3.00	-37.00
3.00	7.00	10.00	3.00	-4.00	-9.00	87.00
0.00	-10.00	3.00	-10.00	1.00	8.00	-22.00
2.00	4.00	0.00	-6.00	2.00	7.00	22.00
-4.00	1.00	-1.00	-10.00	9.00	3.00	33.00
1.00	4.00	3.00	-3.00	0.00	-3.00	-5.00
2.00	-1.00	9.00	-1.00	-7.00	-7.00	38.00
-4.00	-1.00	10.00	6.00	8.00	-2.00	48.00
-5.00	3.00	-8.00	2.00	-5.00	8.00	-71.00
-8.00	-4.00	8.00	1.00	-3.00	-3.00	49.00
-4.00	-6.00	4.00	2.00	-3.00	4.00	20.00
-10.00	7.00	2.00	8.00	-7.00	9.00	-117.00
1.0000	1.0000
isSquared? 0
varUnits: m m m m m m 
outUnit: m^2
training=40
checkRKexpr(optimal=' v0 v1 * v2 v3 * v4 v5 * + +')
checkRKexpr countElems = 11 stackLen = 30
i=1 target = 'v0'
StackInfo firstFix=3000
i=2 target = 'v0 v1'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=3 target = 'v0 v1 *'
StackInfo firstFix=3000
i=4 target = 'v0 v1 * v2'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=5 target = 'v0 v1 * v2 v3'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=6 target = 'v0 v1 * v2 v3 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=7 target = 'v0 v1 * v2 v3 * v4'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=8 target = 'v0 v1 * v2 v3 * v4 v5'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=27
i=9 target = 'v0 v1 * v2 v3 * v4 v5 *'
stackAdjustment fix: -= 7500 (SPECIAL) 
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=28
i=10 target = 'v0 v1 * v2 v3 * v4 v5 * +'
stackAdjustment fix: -= 7500 (SPECIAL) 
StackInfo firstFix=29
i=11 target = 'v0 v1 * v2 v3 * v4 v5 * + +'
StackInfo firstFix=3000
CHECK out = 11
run_brkga:
best=inf
BEST SOLUTION! cost=35.475 stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
restart = 0 	 best= 35.475000	stackLen: 30 => 1.000000  a 1.000000  V1  1.000000  V0  V4  + / * / * empty: 0 1 1 1 1 1 0 1 1 0 0 0 1 0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 1 1 
BEST SOLUTION! cost=31.55 stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 0 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
restart = 1 	 best= 31.550000	stackLen: 30 => 1.000000  V5  * 1.000000  a V0  V0  - * r a + V4  * empty: 0 1 1 1 0 0 1 1 1 0 0 0 0 1 0 0 0 1 1 1 1 1 1 0 1 1 0 0 0 1 
BEST SOLUTION! cost=31.275 stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 0 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 1 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 2 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 3 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 4 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 5 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
restart = 6 	 best= 31.275000	stackLen: 30 => 1.000000  1.000000  * r r V2  V0  + * 1.000000  V3  * 1.000000  V1  * + * empty: 0 0 1 0 0 1 1 1 1 1 0 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 
BEST SOLUTION! cost=30.9303 stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 0 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 1 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 2 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 3 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 4 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 5 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 6 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 7 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 8 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 9 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
restart = 10 	 best= 30.930347	stackLen: 30 => 1.000000  a 1.000000  + r r V4  V5  * * empty: 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1 1 1 1 1 0 1 1 
BEST SOLUTION! cost=5.90166 stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 1 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 2 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 3 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 4 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 5 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 6 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 7 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 8 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 9 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 10 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 11 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 12 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 13 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 14 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 15 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 16 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 17 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 18 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 19 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 20 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 21 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 22 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 23 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 24 	 best= 5.901661	stackLen: 30 => 1.000000  a 1.000000  1.000000  1.000000  1.000000  + / 1.000000  / + + r r V4  V5  * * i V1  V0  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
BEST SOLUTION! cost=0 stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
restart = 0 	 best= 0.000000	stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
OPTIMAL FOUND! ABORTING...
FINISHED BRKGP!
best=0
stackLen: 30 => 1.000000  a i r 1.000000  1.000000  1.000000  * a / i r V4  V5  * * * V0  i V1  i * + 1.000000  * V3  V2  * + empty: 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
trueStackSize=29
printSolution2: ((v2 * v3) + (1 * (((v1) * (v0)) + (((v5 * v4) * \sqrt{(({(1 * 1)^2}/1))}) * \sqrt{({1^2})}))))
Tempo de execucao: 261.046 segundos
FIM
